<template>
	<sn-flutter-view ref="flutter" renderMode="surface" :instanceId="instanceId" :entryPoint="entryPoint"
		:initialRoute="initialRoute" :params="params" destroyAfterBack="true" @pop="onPop" @popChange="onPopChange"
		style="flex:1;" />
</template>

<script>
	import {
		MethodChannel
	} from '@/js_sdk/flutter/flutter.js';
	export default {
		data() {
			return {
				canPop: false,
				instanceId: 'main',
				entryPoint: 'main',
				initialRoute: '/',
				params: {
					a: 1
				}
			};
		},
		onBackPress() {
			if (this.canPop) {
				this.$refs.flutter.pop();
				return true;
			}
		},
		onShow() {
			console.log('flutter show')
			this.$refs.flutter && this.$refs.flutter.show()
		},
		onHide() {
			console.log("flutter hide")
			this.$refs.flutter && this.$refs.flutter.hide();
		},
		onLoad() {
			this.methodChannel = new MethodChannel(this.instanceId);
			this.methodChannel.$on('test', e => {
				console.log('test', e);
				if (e.callbackId) {
					this.methodChannel.callback(e.callbackId, {
						result: 3
					});
				} else {
					uni.showToast({
						title: JSON.stringify(e),
						icon: 'none'
					});
				}
			});
			// setTimeout(() => {
			// 	uni.navigateTo({
			// 		// animationType: 'none',
			// 		url: '/pages/login/login'
			// 	})
			// }, 5 * 1000);
		},
		methods: {
			onPop() {
				uni.navigateBack();
			},
			onPopChange({
				detail
			}) {
				this.canPop = detail.pop;
				const isIOS = uni.getSystemInfoSync().platform == 'ios';
				if (isIOS) {
					const currentWebView = this.$scope.$getAppWebview();
					currentWebView.setStyle({
						popGesture: this.canPop ? 'none' : 'close'
					});
				}
			}
		}
	};
</script>

<style></style>