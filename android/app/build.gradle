apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

def isOffline = isOfflinePkg.toBoolean() == true

android {
    compileSdkVersion 33
    buildToolsVersion '30.0.3'
    defaultConfig {
        applicationId "com.itfenbao.uniapp.flutter"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 100
        versionName "1.0.0"
        multiDexEnabled true
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        compileSdkPreview "UpsideDownCake"
    }

    sourceSets {
        main {
            if (isOffline) {
                jniLibs.srcDirs = ['offlineLibs/libs']
            }
        }
    }

    signingConfigs {
        config {
            keyAlias 'key0'
            keyPassword '123456'
            storeFile file('test.jks')
            storePassword '123456'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    aaptOptions {
        additionalParameters '--auto-add-overlay'
        ignoreAssetsPattern "!.svn:!.git:.*:!CVS:!thumbs.db:!picasa.ini:!*.scc:*~"
    }
    packagingOptions {
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_x64/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:+'
    debugImplementation fileTree(dir: 'debugLibs', include: ['*.aar', '*.jar'], exclude: [])
    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'], exclude: [])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.facebook.fresco:fresco:2.5.0'
    implementation "com.facebook.fresco:animated-gif:2.5.0"
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'com.alibaba:fastjson:1.2.83'
    implementation 'androidx.webkit:webkit:1.3.0'

    // 资源同步必须
    implementation 'com.squareup.okhttp3:okhttp:3.12.12'
    implementation 'com.squareup.okio:okio:1.15.0'

    if (isOffline) {
        implementation fileTree(dir: 'offlineLibs', include: ['*.aar'], exclude: [])
        implementation fileTree(dir: 'offlineLibs/libs', include: ['*.jar'], exclude: [])
        // flutter_embedding.jar 需要
        implementation 'androidx.lifecycle:lifecycle-common:2.2.0'
        implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0'
        implementation 'androidx.lifecycle:lifecycle-runtime:2.2.0'
        implementation 'androidx.fragment:fragment:1.1.0'
        implementation 'androidx.annotation:annotation:1.1.0'
        implementation 'androidx.tracing:tracing:1.0.0'
        implementation 'androidx.core:core:1.6.0'
        implementation 'androidx.window:window-java:1.0.0-beta04'
    } else {
        implementation project(':sn_flutter')
    }

}

